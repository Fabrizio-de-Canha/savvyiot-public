version: '3.9'

services:
  db:
    image: timescale/timescaledb:latest-pg16
    container_name: timescaledb-savvyiot
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/timescaledb
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  api:
    build:
      context: .
      dockerfile: dockerfiles/api.Dockerfile
    container_name: savvyiot-backend
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SERVER: ${POSTGRES_SERVER_CONTAINER_API}
    ports:
      - "5000:5000"
    depends_on:
      - db

  frontend:
    build:
      context: ./iot_frontend  # Set the context to the frontend directory
      dockerfile: ../dockerfiles/frontend.Dockerfile  # Adjust path to your Dockerfile if necessary
    container_name: savvyiot-frontend
    ports:
      - "3000:3000"
    depends_on:
      - db

  ingestor:
    build:
      context: .
      dockerfile: dockerfiles/ingestor.Dockerfile
    container_name: savvyiot-ingestor
    network_mode: "host"
    environment:
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SERVER: ${POSTGRES_SERVER_CONTAINER}
    depends_on:
      - db
